{"ast":null,"code":"export default {\n  generate: function generate(name, key, values) {\n    var variation = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    var i = 0,\n        j = 0,\n        styles = {},\n        value = '',\n        styleName = '',\n        valueName = '',\n        keyName = '',\n        keys = '',\n        keyStyleName = '';\n    var styleValues = this.parseThemeValues(values),\n        valuesLength = styleValues.length,\n        variationLength = variation.length;\n\n    for (; i < valuesLength; ++i) {\n      value = this.getValue(styleValues[i]);\n      valueName = this.getValueName(styleValues[i]);\n      keyName = this.getKeyName(name, valueName);\n      styleName = this.translateKeys(keyName);\n\n      if (this.guardAgainstCssNotSupportedInReactNative(key, this.translateValues(value))) {\n        styles[styleName] = this.guardedKeyHandler(key, value);\n        continue;\n      }\n\n      styles[styleName] = this.keyHandler(key, value);\n    }\n\n    if (variationLength) {\n      j = 0;\n      value = '';\n      styleName = '';\n      valueName = '';\n      keyName = '';\n      keyStyleName = '';\n\n      for (; j < variationLength; ++j) {\n        i = 0;\n        keyName = name + \"-\" + variation[j][0];\n        keys = variation[j][1];\n\n        for (; i < valuesLength; ++i) {\n          value = this.getValue(styleValues[i]);\n          valueName = this.getValueName(styleValues[i]);\n          keyStyleName = this.getKeyName(keyName, valueName);\n          styleName = this.translateKeys(keyStyleName);\n\n          if (this.guardAgainstCssNotSupportedInReactNative(keys, this.translateValues(value))) {\n            styles[styleName] = this.guardedKeyHandler(keys, value);\n            continue;\n          }\n\n          styles[styleName] = this.keyHandler(keys, value);\n        }\n      }\n    }\n\n    return styles;\n  },\n  generateShadows: function generateShadows(name, key, values) {\n    var i = 0,\n        styles = {},\n        value = '',\n        styleName = '',\n        valueName = '',\n        keyName = '',\n        shadowValues = {};\n    var styleValues = this.parseThemeValues(values),\n        valuesLength = styleValues.length;\n\n    for (; i < valuesLength; ++i) {\n      value = this.getValue(styleValues[i]);\n      valueName = this.getValueName(styleValues[i]);\n      keyName = this.getKeyName(name, valueName);\n      shadowValues = this.getShadowValues(value);\n      styleName = this.translateKeys(keyName);\n      styles[styleName] = {};\n      styles[styleName][key + \"Color\"] = shadowValues.color;\n      styles[styleName][key + \"Offset\"] = shadowValues.offset;\n      styles[styleName][key + \"Radius\"] = shadowValues.radius;\n\n      if (key === 'shadow') {\n        styles[styleName][key + \"Opacity\"] = shadowValues.opacity;\n        styles[styleName]['elevation'] = shadowValues.elevation;\n      }\n    }\n\n    return styles;\n  },\n  generateColors: function generateColors(colors) {\n    var _this = this;\n\n    var colorList = {},\n        color,\n        currentColor,\n        colorKey,\n        colorValue,\n        colorName,\n        currentColorKeys;\n\n    for (color in colors) {\n      colorName = color;\n      currentColor = colors[colorName];\n\n      if (typeof currentColor !== 'object') {\n        colorValue = this.translateValues(currentColor);\n        colorName = this.translateKeys(colorName);\n        colorList[colorName] = colorValue;\n      }\n\n      if (typeof currentColor === 'object') {\n        currentColorKeys = Object.getOwnPropertyNames(currentColor);\n        currentColorKeys.map(function (key) {\n          if (['dynamic', 'semantic'].includes(key)) {\n            colorValue = _this.translateValues(currentColor);\n            colorName = _this.translateKeys(colorName);\n            colorList[colorName] = colorValue;\n          } else {\n            colorValue = _this.translateValues(currentColor[key]);\n            colorKey = _this.translateKeys(colorName + \"-\" + key);\n            colorList[colorKey] = colorValue;\n          }\n        });\n      }\n    }\n\n    return colorList;\n  },\n  getValue: function getValue(value) {\n    var valueToReturn = value;\n\n    if (typeof value === 'object') {\n      valueToReturn = value[1];\n    }\n\n    if (typeof valueToReturn === 'object' && !valueToReturn.semantic && !valueToReturn.dynamic) {\n      valueToReturn = valueToReturn[0];\n    }\n\n    return valueToReturn;\n  },\n  getValueName: function getValueName(value) {\n    if (typeof value === 'object') {\n      return value[0];\n    }\n\n    return value;\n  },\n  getKeyName: function getKeyName(name, valueName) {\n    var keyName = valueName,\n        prefix = name;\n\n    if (keyName.substring(0, 1) === '-') {\n      prefix = \"-\" + name;\n      keyName = keyName.substring(1);\n    }\n\n    if (prefix !== '') {\n      keyName = prefix + \"-\" + keyName;\n    }\n\n    return keyName;\n  },\n  keyHandler: function keyHandler(keys, value) {\n    var i = 0,\n        tempObject = {};\n    var keysLength = keys.length;\n\n    if (typeof keys === 'object') {\n      for (; i < keysLength; ++i) {\n        tempObject[keys[i]] = this.translateValues(value);\n      }\n\n      return tempObject;\n    }\n\n    tempObject[keys] = this.translateValues(value);\n    return tempObject;\n  },\n  guardAgainstCssNotSupportedInReactNative: function guardAgainstCssNotSupportedInReactNative(property, value) {\n    if (property === 'zIndex' && typeof value !== 'number') {\n      return true;\n    }\n\n    if (property === 'fontWeight' && typeof value === 'number') {\n      return true;\n    }\n\n    if (property === 'letterSpacing') {\n      return true;\n    }\n\n    if (property === 'flex' && typeof value !== 'number') {\n      return true;\n    }\n\n    return false;\n  },\n  guardedKeyHandler: function guardedKeyHandler(property, value) {\n    var tempObject = {},\n        translatedValue = 0;\n\n    if (property === 'zIndex' && typeof value !== 'number') {\n      tempObject[property] = 0;\n    }\n\n    if (property === 'fontWeight') {\n      tempObject[property] = \"\" + value;\n    }\n\n    if (property === 'letterSpacing') {\n      if (value.search('em') !== -1) {\n        translatedValue = parseFloat(value.slice(0, -2)) * 16;\n      }\n\n      tempObject[property] = translatedValue;\n    }\n\n    if (property === 'flex' && typeof value !== 'number') {\n      var firstNumber = value.match(/^[0-9]+/);\n      translatedValue = this.translateValues(firstNumber && firstNumber.length ? firstNumber[0] : 0);\n      tempObject[property] = translatedValue;\n    }\n\n    return tempObject;\n  },\n  translateKeys: function translateKeys(name) {\n    var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var translatedKey = name;\n\n    if (translatedKey.search('default') !== -1) {\n      translatedKey = \"\" + prefix + translatedKey.replace('-default', '');\n    }\n\n    if (translatedKey.search(/\\//) !== -1) {\n      translatedKey = \"\" + prefix + translatedKey.replace('/', '_');\n    }\n\n    if (translatedKey.search(/^-[a-zA-Z]/) !== -1) {\n      translatedKey = \"\" + prefix + translatedKey.replace(/^(-)[a-zA-Z]/g, function (result) {\n        return result.replace('-', '_');\n      });\n    }\n\n    if (translatedKey.search('-') !== -1) {\n      translatedKey = translatedKey.replace(/-([a-z])/g, function (result) {\n        return result[1].toUpperCase();\n      });\n    }\n\n    if (translatedKey.search(/^[a-zA-Z_]+-[0-9]/) !== -1) {\n      translatedKey = \"\" + prefix + translatedKey.replace('-', '');\n    }\n\n    return translatedKey;\n  },\n  translateValues: function translateValues(content) {\n    var translatedValue = content;\n\n    if (translatedValue === 'transparent') {\n      return 'rgba(0,0,0,0)';\n    }\n\n    if (translatedValue === 'true') {\n      return true;\n    }\n\n    if (translatedValue === 'false') {\n      return false;\n    }\n\n    if (typeof translatedValue !== 'string') {\n      return translatedValue;\n    }\n\n    if (content.search(/^-?[0-9]*(\\.[0-9]+)?px$/) !== -1) {\n      translatedValue = content.replace('px', '');\n      return parseInt(translatedValue);\n    }\n\n    if (content.search(/^-?[0-9]*(\\.[0-9]+)?rem$/) !== -1) {\n      translatedValue = content.replace('rem', '');\n      translatedValue = parseFloat(translatedValue) * 16;\n      return Math.round(translatedValue);\n    }\n\n    if (content.search(/^-?[0-9]*(\\.[0-9]+)?em$/) !== -1) {\n      translatedValue = content.replace('em', '');\n      translatedValue = parseFloat(translatedValue) * 16;\n      return Math.round(translatedValue);\n    }\n\n    if (content.search(/^-?[0-9]+$/) !== -1) {\n      return parseInt(translatedValue);\n    }\n\n    if (content.search(/-?\\.[0-9]+$/) !== -1) {\n      return parseFloat(translatedValue);\n    }\n\n    return translatedValue;\n  },\n  getShadowValues: function getShadowValues(content) {\n    var results, color, elevation;\n\n    if (content === 'none' || content.search(/inset/) !== -1) {\n      return {\n        color: 'rgba(0, 0, 0, 0)',\n        offset: {\n          width: 0,\n          height: 0\n        },\n        radius: 0,\n        opacity: 0,\n        elevation: 0\n      };\n    }\n\n    results = content.match(/^([0-9]+)p?x?\\s([0-9]+)p?x?\\s([0-9]+)p?x?\\s(-?[0-9]+)?p?x?\\s?(rgba?\\(.+?\\))?(#[a-zA-Z0-9]{3,8})?/);\n    elevation = content.match(/,(?:\\s+)?(-?[0-9]+)$/);\n    color = results[5];\n    elevation = elevation ? this.translateValues(elevation[1]) : this.translateValues(results[3]) / 2;\n\n    if (typeof color === 'undefined') {\n      color = results[6];\n    }\n\n    return {\n      color: color,\n      offset: {\n        width: this.translateValues(results[1]),\n        height: this.translateValues(results[2])\n      },\n      radius: this.translateValues(results[3]),\n      opacity: 1,\n      elevation: elevation\n    };\n  },\n  parseThemeValues: function parseThemeValues(values) {\n    if (typeof values === 'object' && !Array.isArray(values)) {\n      return this.toArray(values);\n    }\n\n    return values;\n  },\n  toArray: function toArray(object) {\n    return Object.keys(object).map(function (value) {\n      return [value, object[value]];\n    });\n  }\n};","map":{"version":3,"sources":["/Users/jianlongnie/workspace/archus-components-mobile/node_modules/react-native-tailwindcss/util/generator.js"],"names":["generate","name","key","values","variation","i","j","styles","value","styleName","valueName","keyName","keys","keyStyleName","styleValues","parseThemeValues","valuesLength","length","variationLength","getValue","getValueName","getKeyName","translateKeys","guardAgainstCssNotSupportedInReactNative","translateValues","guardedKeyHandler","keyHandler","generateShadows","shadowValues","getShadowValues","color","offset","radius","opacity","elevation","generateColors","colors","colorList","currentColor","colorKey","colorValue","colorName","currentColorKeys","Object","getOwnPropertyNames","map","includes","valueToReturn","semantic","dynamic","prefix","substring","tempObject","keysLength","property","translatedValue","search","parseFloat","slice","firstNumber","match","translatedKey","replace","result","toUpperCase","content","parseInt","Math","round","results","width","height","Array","isArray","toArray","object"],"mappings":"AAAA,eAAe;AACXA,EAAAA,QADW,oBACFC,IADE,EACIC,GADJ,EACSC,MADT,EACiC;AAAA,QAAhBC,SAAgB,uEAAJ,EAAI;AACxC,QAAIC,CAAC,GAAG,CAAR;AAAA,QACIC,CAAC,GAAG,CADR;AAAA,QAEIC,MAAM,GAAG,EAFb;AAAA,QAGIC,KAAK,GAAG,EAHZ;AAAA,QAIIC,SAAS,GAAG,EAJhB;AAAA,QAKIC,SAAS,GAAG,EALhB;AAAA,QAMIC,OAAO,GAAG,EANd;AAAA,QAOIC,IAAI,GAAG,EAPX;AAAA,QAQIC,YAAY,GAAG,EARnB;AAUA,QAAMC,WAAW,GAAG,KAAKC,gBAAL,CAAsBZ,MAAtB,CAApB;AAAA,QACIa,YAAY,GAAGF,WAAW,CAACG,MAD/B;AAAA,QAEIC,eAAe,GAAGd,SAAS,CAACa,MAFhC;;AAIA,WAAOZ,CAAC,GAAGW,YAAX,EAAyB,EAAEX,CAA3B,EAA8B;AAC1BG,MAAAA,KAAK,GAAG,KAAKW,QAAL,CAAcL,WAAW,CAACT,CAAD,CAAzB,CAAR;AACAK,MAAAA,SAAS,GAAG,KAAKU,YAAL,CAAkBN,WAAW,CAACT,CAAD,CAA7B,CAAZ;AACAM,MAAAA,OAAO,GAAG,KAAKU,UAAL,CAAgBpB,IAAhB,EAAsBS,SAAtB,CAAV;AAEAD,MAAAA,SAAS,GAAG,KAAKa,aAAL,CAAmBX,OAAnB,CAAZ;;AAEA,UACI,KAAKY,wCAAL,CACIrB,GADJ,EAEI,KAAKsB,eAAL,CAAqBhB,KAArB,CAFJ,CADJ,EAKE;AACED,QAAAA,MAAM,CAACE,SAAD,CAAN,GAAoB,KAAKgB,iBAAL,CAAuBvB,GAAvB,EAA4BM,KAA5B,CAApB;AAEA;AACH;;AAEDD,MAAAA,MAAM,CAACE,SAAD,CAAN,GAAoB,KAAKiB,UAAL,CAAgBxB,GAAhB,EAAqBM,KAArB,CAApB;AACH;;AAED,QAAIU,eAAJ,EAAqB;AACjBZ,MAAAA,CAAC,GAAG,CAAJ;AACAE,MAAAA,KAAK,GAAG,EAAR;AACAC,MAAAA,SAAS,GAAG,EAAZ;AACAC,MAAAA,SAAS,GAAG,EAAZ;AACAC,MAAAA,OAAO,GAAG,EAAV;AACAE,MAAAA,YAAY,GAAG,EAAf;;AAEA,aAAOP,CAAC,GAAGY,eAAX,EAA4B,EAAEZ,CAA9B,EAAiC;AAC7BD,QAAAA,CAAC,GAAG,CAAJ;AACAM,QAAAA,OAAO,GAAMV,IAAN,SAAcG,SAAS,CAACE,CAAD,CAAT,CAAa,CAAb,CAArB;AACAM,QAAAA,IAAI,GAAGR,SAAS,CAACE,CAAD,CAAT,CAAa,CAAb,CAAP;;AAEA,eAAOD,CAAC,GAAGW,YAAX,EAAyB,EAAEX,CAA3B,EAA8B;AAC1BG,UAAAA,KAAK,GAAG,KAAKW,QAAL,CAAcL,WAAW,CAACT,CAAD,CAAzB,CAAR;AACAK,UAAAA,SAAS,GAAG,KAAKU,YAAL,CAAkBN,WAAW,CAACT,CAAD,CAA7B,CAAZ;AACAQ,UAAAA,YAAY,GAAG,KAAKQ,UAAL,CAAgBV,OAAhB,EAAyBD,SAAzB,CAAf;AAEAD,UAAAA,SAAS,GAAG,KAAKa,aAAL,CAAmBT,YAAnB,CAAZ;;AAEA,cACI,KAAKU,wCAAL,CACIX,IADJ,EAEI,KAAKY,eAAL,CAAqBhB,KAArB,CAFJ,CADJ,EAKE;AACED,YAAAA,MAAM,CAACE,SAAD,CAAN,GAAoB,KAAKgB,iBAAL,CAAuBb,IAAvB,EAA6BJ,KAA7B,CAApB;AAEA;AACH;;AAEDD,UAAAA,MAAM,CAACE,SAAD,CAAN,GAAoB,KAAKiB,UAAL,CAAgBd,IAAhB,EAAsBJ,KAAtB,CAApB;AACH;AACJ;AACJ;;AAED,WAAOD,MAAP;AACH,GA1EU;AA4EXoB,EAAAA,eA5EW,2BA4EK1B,IA5EL,EA4EWC,GA5EX,EA4EgBC,MA5EhB,EA4EwB;AAC/B,QAAIE,CAAC,GAAG,CAAR;AAAA,QACIE,MAAM,GAAG,EADb;AAAA,QAEIC,KAAK,GAAG,EAFZ;AAAA,QAGIC,SAAS,GAAG,EAHhB;AAAA,QAIIC,SAAS,GAAG,EAJhB;AAAA,QAKIC,OAAO,GAAG,EALd;AAAA,QAMIiB,YAAY,GAAG,EANnB;AAQA,QAAMd,WAAW,GAAG,KAAKC,gBAAL,CAAsBZ,MAAtB,CAApB;AAAA,QACIa,YAAY,GAAGF,WAAW,CAACG,MAD/B;;AAGA,WAAOZ,CAAC,GAAGW,YAAX,EAAyB,EAAEX,CAA3B,EAA8B;AAC1BG,MAAAA,KAAK,GAAG,KAAKW,QAAL,CAAcL,WAAW,CAACT,CAAD,CAAzB,CAAR;AACAK,MAAAA,SAAS,GAAG,KAAKU,YAAL,CAAkBN,WAAW,CAACT,CAAD,CAA7B,CAAZ;AACAM,MAAAA,OAAO,GAAG,KAAKU,UAAL,CAAgBpB,IAAhB,EAAsBS,SAAtB,CAAV;AACAkB,MAAAA,YAAY,GAAG,KAAKC,eAAL,CAAqBrB,KAArB,CAAf;AAEAC,MAAAA,SAAS,GAAG,KAAKa,aAAL,CAAmBX,OAAnB,CAAZ;AACAJ,MAAAA,MAAM,CAACE,SAAD,CAAN,GAAoB,EAApB;AAEAF,MAAAA,MAAM,CAACE,SAAD,CAAN,CAAqBP,GAArB,cAAmC0B,YAAY,CAACE,KAAhD;AACAvB,MAAAA,MAAM,CAACE,SAAD,CAAN,CAAqBP,GAArB,eAAoC0B,YAAY,CAACG,MAAjD;AACAxB,MAAAA,MAAM,CAACE,SAAD,CAAN,CAAqBP,GAArB,eAAoC0B,YAAY,CAACI,MAAjD;;AAEA,UAAI9B,GAAG,KAAK,QAAZ,EAAsB;AAClBK,QAAAA,MAAM,CAACE,SAAD,CAAN,CAAqBP,GAArB,gBAAqC0B,YAAY,CAACK,OAAlD;AACA1B,QAAAA,MAAM,CAACE,SAAD,CAAN,CAAkB,WAAlB,IAAiCmB,YAAY,CAACM,SAA9C;AACH;AACJ;;AAED,WAAO3B,MAAP;AACH,GA5GU;AA8GX4B,EAAAA,cA9GW,0BA8GIC,MA9GJ,EA8GY;AAAA;;AACnB,QAAIC,SAAS,GAAG,EAAhB;AAAA,QACIP,KADJ;AAAA,QAEIQ,YAFJ;AAAA,QAGIC,QAHJ;AAAA,QAIIC,UAJJ;AAAA,QAKIC,SALJ;AAAA,QAMIC,gBANJ;;AAQA,SAAKZ,KAAL,IAAcM,MAAd,EAAsB;AAClBK,MAAAA,SAAS,GAAGX,KAAZ;AAEAQ,MAAAA,YAAY,GAAGF,MAAM,CAACK,SAAD,CAArB;;AAEA,UAAI,OAAOH,YAAP,KAAwB,QAA5B,EAAsC;AAClCE,QAAAA,UAAU,GAAG,KAAKhB,eAAL,CAAqBc,YAArB,CAAb;AAEAG,QAAAA,SAAS,GAAG,KAAKnB,aAAL,CAAmBmB,SAAnB,CAAZ;AAEAJ,QAAAA,SAAS,CAACI,SAAD,CAAT,GAAuBD,UAAvB;AACH;;AAED,UAAI,OAAOF,YAAP,KAAwB,QAA5B,EAAsC;AAClCI,QAAAA,gBAAgB,GAAGC,MAAM,CAACC,mBAAP,CAA2BN,YAA3B,CAAnB;AAEAI,QAAAA,gBAAgB,CAACG,GAAjB,CAAqB,UAAA3C,GAAG,EAAI;AACxB,cAAI,CAAC,SAAD,EAAY,UAAZ,EAAwB4C,QAAxB,CAAiC5C,GAAjC,CAAJ,EAA2C;AACvCsC,YAAAA,UAAU,GAAG,KAAI,CAAChB,eAAL,CAAqBc,YAArB,CAAb;AAEAG,YAAAA,SAAS,GAAG,KAAI,CAACnB,aAAL,CAAmBmB,SAAnB,CAAZ;AAEAJ,YAAAA,SAAS,CAACI,SAAD,CAAT,GAAuBD,UAAvB;AACH,WAND,MAMO;AACHA,YAAAA,UAAU,GAAG,KAAI,CAAChB,eAAL,CAAqBc,YAAY,CAACpC,GAAD,CAAjC,CAAb;AAEAqC,YAAAA,QAAQ,GAAG,KAAI,CAACjB,aAAL,CAAsBmB,SAAtB,SAAmCvC,GAAnC,CAAX;AAEAmC,YAAAA,SAAS,CAACE,QAAD,CAAT,GAAsBC,UAAtB;AACH;AACJ,SAdD;AAeH;AACJ;;AAED,WAAOH,SAAP;AACH,GA1JU;AA4JXlB,EAAAA,QA5JW,oBA4JFX,KA5JE,EA4JK;AACZ,QAAIuC,aAAa,GAAGvC,KAApB;;AAEA,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3BuC,MAAAA,aAAa,GAAGvC,KAAK,CAAC,CAAD,CAArB;AACH;;AAED,QACI,OAAOuC,aAAP,KAAyB,QAAzB,IACA,CAACA,aAAa,CAACC,QADf,IAEA,CAACD,aAAa,CAACE,OAHnB,EAIE;AACEF,MAAAA,aAAa,GAAGA,aAAa,CAAC,CAAD,CAA7B;AACH;;AAED,WAAOA,aAAP;AACH,GA5KU;AA8KX3B,EAAAA,YA9KW,wBA8KEZ,KA9KF,EA8KS;AAChB,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,aAAOA,KAAK,CAAC,CAAD,CAAZ;AACH;;AAED,WAAOA,KAAP;AACH,GApLU;AAsLXa,EAAAA,UAtLW,sBAsLApB,IAtLA,EAsLMS,SAtLN,EAsLiB;AACxB,QAAIC,OAAO,GAAGD,SAAd;AAAA,QACIwC,MAAM,GAAGjD,IADb;;AAGA,QAAIU,OAAO,CAACwC,SAAR,CAAkB,CAAlB,EAAqB,CAArB,MAA4B,GAAhC,EAAqC;AACjCD,MAAAA,MAAM,SAAOjD,IAAb;AACAU,MAAAA,OAAO,GAAGA,OAAO,CAACwC,SAAR,CAAkB,CAAlB,CAAV;AACH;;AAED,QAAID,MAAM,KAAK,EAAf,EAAmB;AACfvC,MAAAA,OAAO,GAAMuC,MAAN,SAAgBvC,OAAvB;AACH;;AAED,WAAOA,OAAP;AACH,GApMU;AAsMXe,EAAAA,UAtMW,sBAsMAd,IAtMA,EAsMMJ,KAtMN,EAsMa;AACpB,QAAIH,CAAC,GAAG,CAAR;AAAA,QACI+C,UAAU,GAAG,EADjB;AAEA,QAAMC,UAAU,GAAGzC,IAAI,CAACK,MAAxB;;AAEA,QAAI,OAAOL,IAAP,KAAgB,QAApB,EAA8B;AAC1B,aAAOP,CAAC,GAAGgD,UAAX,EAAuB,EAAEhD,CAAzB,EAA4B;AACxB+C,QAAAA,UAAU,CAACxC,IAAI,CAACP,CAAD,CAAL,CAAV,GAAsB,KAAKmB,eAAL,CAAqBhB,KAArB,CAAtB;AACH;;AAED,aAAO4C,UAAP;AACH;;AAEDA,IAAAA,UAAU,CAACxC,IAAD,CAAV,GAAmB,KAAKY,eAAL,CAAqBhB,KAArB,CAAnB;AAEA,WAAO4C,UAAP;AACH,GAtNU;AAwNX7B,EAAAA,wCAxNW,oDAwN8B+B,QAxN9B,EAwNwC9C,KAxNxC,EAwN+C;AACtD,QAAI8C,QAAQ,KAAK,QAAb,IAAyB,OAAO9C,KAAP,KAAiB,QAA9C,EAAwD;AACpD,aAAO,IAAP;AACH;;AAED,QAAI8C,QAAQ,KAAK,YAAb,IAA6B,OAAO9C,KAAP,KAAiB,QAAlD,EAA4D;AACxD,aAAO,IAAP;AACH;;AAED,QAAI8C,QAAQ,KAAK,eAAjB,EAAkC;AAC9B,aAAO,IAAP;AACH;;AAED,QAAIA,QAAQ,KAAK,MAAb,IAAuB,OAAO9C,KAAP,KAAiB,QAA5C,EAAsD;AAClD,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH,GA1OU;AA4OXiB,EAAAA,iBA5OW,6BA4OO6B,QA5OP,EA4OiB9C,KA5OjB,EA4OwB;AAC/B,QAAI4C,UAAU,GAAG,EAAjB;AAAA,QACIG,eAAe,GAAG,CADtB;;AAGA,QAAID,QAAQ,KAAK,QAAb,IAAyB,OAAO9C,KAAP,KAAiB,QAA9C,EAAwD;AACpD4C,MAAAA,UAAU,CAACE,QAAD,CAAV,GAAuB,CAAvB;AACH;;AAED,QAAIA,QAAQ,KAAK,YAAjB,EAA+B;AAC3BF,MAAAA,UAAU,CAACE,QAAD,CAAV,QAA0B9C,KAA1B;AACH;;AAED,QAAI8C,QAAQ,KAAK,eAAjB,EAAkC;AAC9B,UAAI9C,KAAK,CAACgD,MAAN,CAAa,IAAb,MAAuB,CAAC,CAA5B,EAA+B;AAC3BD,QAAAA,eAAe,GAAGE,UAAU,CAACjD,KAAK,CAACkD,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAD,CAAV,GAAiC,EAAnD;AACH;;AAEDN,MAAAA,UAAU,CAACE,QAAD,CAAV,GAAuBC,eAAvB;AACH;;AAED,QAAID,QAAQ,KAAK,MAAb,IAAuB,OAAO9C,KAAP,KAAiB,QAA5C,EAAsD;AAClD,UAAMmD,WAAW,GAAGnD,KAAK,CAACoD,KAAN,CAAY,SAAZ,CAApB;AAEAL,MAAAA,eAAe,GAAG,KAAK/B,eAAL,CACdmC,WAAW,IAAIA,WAAW,CAAC1C,MAA3B,GAAoC0C,WAAW,CAAC,CAAD,CAA/C,GAAqD,CADvC,CAAlB;AAIAP,MAAAA,UAAU,CAACE,QAAD,CAAV,GAAuBC,eAAvB;AACH;;AAED,WAAOH,UAAP;AACH,GA3QU;AA6QX9B,EAAAA,aA7QW,yBA6QGrB,IA7QH,EA6QsB;AAAA,QAAbiD,MAAa,uEAAJ,EAAI;AAC7B,QAAIW,aAAa,GAAG5D,IAApB;;AAEA,QAAI4D,aAAa,CAACL,MAAd,CAAqB,SAArB,MAAoC,CAAC,CAAzC,EAA4C;AACxCK,MAAAA,aAAa,QAAMX,MAAN,GAAeW,aAAa,CAACC,OAAd,CAAsB,UAAtB,EAAkC,EAAlC,CAA5B;AACH;;AAED,QAAID,aAAa,CAACL,MAAd,CAAqB,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACnCK,MAAAA,aAAa,QAAMX,MAAN,GAAeW,aAAa,CAACC,OAAd,CAAsB,GAAtB,EAA2B,GAA3B,CAA5B;AACH;;AAED,QAAID,aAAa,CAACL,MAAd,CAAqB,YAArB,MAAuC,CAAC,CAA5C,EAA+C;AAC3CK,MAAAA,aAAa,QAAMX,MAAN,GAAeW,aAAa,CAACC,OAAd,CACxB,eADwB,EAExB,UAAAC,MAAM,EAAI;AACN,eAAOA,MAAM,CAACD,OAAP,CAAe,GAAf,EAAoB,GAApB,CAAP;AACH,OAJuB,CAA5B;AAMH;;AAED,QAAID,aAAa,CAACL,MAAd,CAAqB,GAArB,MAA8B,CAAC,CAAnC,EAAsC;AAClCK,MAAAA,aAAa,GAAGA,aAAa,CAACC,OAAd,CAAsB,WAAtB,EAAmC,UAAAC,MAAM,EAAI;AACzD,eAAOA,MAAM,CAAC,CAAD,CAAN,CAAUC,WAAV,EAAP;AACH,OAFe,CAAhB;AAGH;;AAED,QAAIH,aAAa,CAACL,MAAd,CAAqB,mBAArB,MAA8C,CAAC,CAAnD,EAAsD;AAClDK,MAAAA,aAAa,QAAMX,MAAN,GAAeW,aAAa,CAACC,OAAd,CAAsB,GAAtB,EAA2B,EAA3B,CAA5B;AACH;;AAED,WAAOD,aAAP;AACH,GA5SU;AA8SXrC,EAAAA,eA9SW,2BA8SKyC,OA9SL,EA8Sc;AACrB,QAAIV,eAAe,GAAGU,OAAtB;;AAEA,QAAIV,eAAe,KAAK,aAAxB,EAAuC;AACnC,aAAO,eAAP;AACH;;AAED,QAAIA,eAAe,KAAK,MAAxB,EAAgC;AAC5B,aAAO,IAAP;AACH;;AAED,QAAIA,eAAe,KAAK,OAAxB,EAAiC;AAC7B,aAAO,KAAP;AACH;;AAED,QAAI,OAAOA,eAAP,KAA2B,QAA/B,EAAyC;AACrC,aAAOA,eAAP;AACH;;AAED,QAAIU,OAAO,CAACT,MAAR,CAAe,yBAAf,MAA8C,CAAC,CAAnD,EAAsD;AAClDD,MAAAA,eAAe,GAAGU,OAAO,CAACH,OAAR,CAAgB,IAAhB,EAAsB,EAAtB,CAAlB;AAEA,aAAOI,QAAQ,CAACX,eAAD,CAAf;AACH;;AAED,QAAIU,OAAO,CAACT,MAAR,CAAe,0BAAf,MAA+C,CAAC,CAApD,EAAuD;AACnDD,MAAAA,eAAe,GAAGU,OAAO,CAACH,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,CAAlB;AAEAP,MAAAA,eAAe,GAAGE,UAAU,CAACF,eAAD,CAAV,GAA8B,EAAhD;AAEA,aAAOY,IAAI,CAACC,KAAL,CAAWb,eAAX,CAAP;AACH;;AAED,QAAIU,OAAO,CAACT,MAAR,CAAe,yBAAf,MAA8C,CAAC,CAAnD,EAAsD;AAClDD,MAAAA,eAAe,GAAGU,OAAO,CAACH,OAAR,CAAgB,IAAhB,EAAsB,EAAtB,CAAlB;AAEAP,MAAAA,eAAe,GAAGE,UAAU,CAACF,eAAD,CAAV,GAA8B,EAAhD;AAEA,aAAOY,IAAI,CAACC,KAAL,CAAWb,eAAX,CAAP;AACH;;AAED,QAAIU,OAAO,CAACT,MAAR,CAAe,YAAf,MAAiC,CAAC,CAAtC,EAAyC;AACrC,aAAOU,QAAQ,CAACX,eAAD,CAAf;AACH;;AAED,QAAIU,OAAO,CAACT,MAAR,CAAe,aAAf,MAAkC,CAAC,CAAvC,EAA0C;AACtC,aAAOC,UAAU,CAACF,eAAD,CAAjB;AACH;;AAED,WAAOA,eAAP;AACH,GAhWU;AAkWX1B,EAAAA,eAlWW,2BAkWKoC,OAlWL,EAkWc;AACrB,QAAII,OAAJ,EAAavC,KAAb,EAAoBI,SAApB;;AAEA,QAAI+B,OAAO,KAAK,MAAZ,IAAsBA,OAAO,CAACT,MAAR,CAAe,OAAf,MAA4B,CAAC,CAAvD,EAA0D;AACtD,aAAO;AACH1B,QAAAA,KAAK,EAAE,kBADJ;AAEHC,QAAAA,MAAM,EAAE;AAACuC,UAAAA,KAAK,EAAE,CAAR;AAAWC,UAAAA,MAAM,EAAE;AAAnB,SAFL;AAGHvC,QAAAA,MAAM,EAAE,CAHL;AAIHC,QAAAA,OAAO,EAAE,CAJN;AAKHC,QAAAA,SAAS,EAAE;AALR,OAAP;AAOH;;AAEDmC,IAAAA,OAAO,GAAGJ,OAAO,CAACL,KAAR,CACN,kGADM,CAAV;AAIA1B,IAAAA,SAAS,GAAG+B,OAAO,CAACL,KAAR,CAAc,sBAAd,CAAZ;AAEA9B,IAAAA,KAAK,GAAGuC,OAAO,CAAC,CAAD,CAAf;AAEAnC,IAAAA,SAAS,GAAGA,SAAS,GACf,KAAKV,eAAL,CAAqBU,SAAS,CAAC,CAAD,CAA9B,CADe,GAEf,KAAKV,eAAL,CAAqB6C,OAAO,CAAC,CAAD,CAA5B,IAAmC,CAFzC;;AAIA,QAAI,OAAOvC,KAAP,KAAiB,WAArB,EAAkC;AAC9BA,MAAAA,KAAK,GAAGuC,OAAO,CAAC,CAAD,CAAf;AACH;;AAED,WAAO;AACHvC,MAAAA,KAAK,EAAEA,KADJ;AAEHC,MAAAA,MAAM,EAAE;AACJuC,QAAAA,KAAK,EAAE,KAAK9C,eAAL,CAAqB6C,OAAO,CAAC,CAAD,CAA5B,CADH;AAEJE,QAAAA,MAAM,EAAE,KAAK/C,eAAL,CAAqB6C,OAAO,CAAC,CAAD,CAA5B;AAFJ,OAFL;AAMHrC,MAAAA,MAAM,EAAE,KAAKR,eAAL,CAAqB6C,OAAO,CAAC,CAAD,CAA5B,CANL;AAOHpC,MAAAA,OAAO,EAAE,CAPN;AAQHC,MAAAA,SAAS,EAAEA;AARR,KAAP;AAUH,GAzYU;AA2YXnB,EAAAA,gBA3YW,4BA2YMZ,MA3YN,EA2Yc;AACrB,QAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,CAACqE,KAAK,CAACC,OAAN,CAActE,MAAd,CAAnC,EAA0D;AACtD,aAAO,KAAKuE,OAAL,CAAavE,MAAb,CAAP;AACH;;AAED,WAAOA,MAAP;AACH,GAjZU;AAmZXuE,EAAAA,OAnZW,mBAmZHC,MAnZG,EAmZK;AACZ,WAAOhC,MAAM,CAAC/B,IAAP,CAAY+D,MAAZ,EAAoB9B,GAApB,CAAwB,UAAArC,KAAK,EAAI;AACpC,aAAO,CAACA,KAAD,EAAQmE,MAAM,CAACnE,KAAD,CAAd,CAAP;AACH,KAFM,CAAP;AAGH;AAvZU,CAAf","sourcesContent":["export default {\n    generate(name, key, values, variation = []) {\n        let i = 0,\n            j = 0,\n            styles = {},\n            value = '',\n            styleName = '',\n            valueName = '',\n            keyName = '',\n            keys = '',\n            keyStyleName = '';\n\n        const styleValues = this.parseThemeValues(values),\n            valuesLength = styleValues.length,\n            variationLength = variation.length;\n\n        for (; i < valuesLength; ++i) {\n            value = this.getValue(styleValues[i]);\n            valueName = this.getValueName(styleValues[i]);\n            keyName = this.getKeyName(name, valueName);\n\n            styleName = this.translateKeys(keyName);\n\n            if (\n                this.guardAgainstCssNotSupportedInReactNative(\n                    key,\n                    this.translateValues(value)\n                )\n            ) {\n                styles[styleName] = this.guardedKeyHandler(key, value);\n\n                continue;\n            }\n\n            styles[styleName] = this.keyHandler(key, value);\n        }\n\n        if (variationLength) {\n            j = 0;\n            value = '';\n            styleName = '';\n            valueName = '';\n            keyName = '';\n            keyStyleName = '';\n\n            for (; j < variationLength; ++j) {\n                i = 0;\n                keyName = `${name}-${variation[j][0]}`;\n                keys = variation[j][1];\n\n                for (; i < valuesLength; ++i) {\n                    value = this.getValue(styleValues[i]);\n                    valueName = this.getValueName(styleValues[i]);\n                    keyStyleName = this.getKeyName(keyName, valueName);\n\n                    styleName = this.translateKeys(keyStyleName);\n\n                    if (\n                        this.guardAgainstCssNotSupportedInReactNative(\n                            keys,\n                            this.translateValues(value)\n                        )\n                    ) {\n                        styles[styleName] = this.guardedKeyHandler(keys, value);\n\n                        continue;\n                    }\n\n                    styles[styleName] = this.keyHandler(keys, value);\n                }\n            }\n        }\n\n        return styles;\n    },\n\n    generateShadows(name, key, values) {\n        let i = 0,\n            styles = {},\n            value = '',\n            styleName = '',\n            valueName = '',\n            keyName = '',\n            shadowValues = {};\n\n        const styleValues = this.parseThemeValues(values),\n            valuesLength = styleValues.length;\n\n        for (; i < valuesLength; ++i) {\n            value = this.getValue(styleValues[i]);\n            valueName = this.getValueName(styleValues[i]);\n            keyName = this.getKeyName(name, valueName);\n            shadowValues = this.getShadowValues(value);\n\n            styleName = this.translateKeys(keyName);\n            styles[styleName] = {};\n\n            styles[styleName][`${key}Color`] = shadowValues.color;\n            styles[styleName][`${key}Offset`] = shadowValues.offset;\n            styles[styleName][`${key}Radius`] = shadowValues.radius;\n\n            if (key === 'shadow') {\n                styles[styleName][`${key}Opacity`] = shadowValues.opacity;\n                styles[styleName]['elevation'] = shadowValues.elevation;\n            }\n        }\n\n        return styles;\n    },\n\n    generateColors(colors) {\n        let colorList = {},\n            color,\n            currentColor,\n            colorKey,\n            colorValue,\n            colorName,\n            currentColorKeys;\n\n        for (color in colors) {\n            colorName = color;\n\n            currentColor = colors[colorName];\n\n            if (typeof currentColor !== 'object') {\n                colorValue = this.translateValues(currentColor);\n\n                colorName = this.translateKeys(colorName);\n\n                colorList[colorName] = colorValue;\n            }\n\n            if (typeof currentColor === 'object') {\n                currentColorKeys = Object.getOwnPropertyNames(currentColor);\n\n                currentColorKeys.map(key => {\n                    if (['dynamic', 'semantic'].includes(key)) {\n                        colorValue = this.translateValues(currentColor);\n\n                        colorName = this.translateKeys(colorName);\n\n                        colorList[colorName] = colorValue;\n                    } else {\n                        colorValue = this.translateValues(currentColor[key]);\n\n                        colorKey = this.translateKeys(`${colorName}-${key}`);\n\n                        colorList[colorKey] = colorValue;\n                    }\n                });\n            }\n        }\n\n        return colorList;\n    },\n\n    getValue(value) {\n        let valueToReturn = value;\n\n        if (typeof value === 'object') {\n            valueToReturn = value[1];\n        }\n\n        if (\n            typeof valueToReturn === 'object' &&\n            !valueToReturn.semantic &&\n            !valueToReturn.dynamic\n        ) {\n            valueToReturn = valueToReturn[0];\n        }\n\n        return valueToReturn;\n    },\n\n    getValueName(value) {\n        if (typeof value === 'object') {\n            return value[0];\n        }\n\n        return value;\n    },\n\n    getKeyName(name, valueName) {\n        let keyName = valueName,\n            prefix = name;\n\n        if (keyName.substring(0, 1) === '-') {\n            prefix = `-${name}`;\n            keyName = keyName.substring(1);\n        }\n\n        if (prefix !== '') {\n            keyName = `${prefix}-${keyName}`;\n        }\n\n        return keyName;\n    },\n\n    keyHandler(keys, value) {\n        let i = 0,\n            tempObject = {};\n        const keysLength = keys.length;\n\n        if (typeof keys === 'object') {\n            for (; i < keysLength; ++i) {\n                tempObject[keys[i]] = this.translateValues(value);\n            }\n\n            return tempObject;\n        }\n\n        tempObject[keys] = this.translateValues(value);\n\n        return tempObject;\n    },\n\n    guardAgainstCssNotSupportedInReactNative(property, value) {\n        if (property === 'zIndex' && typeof value !== 'number') {\n            return true;\n        }\n\n        if (property === 'fontWeight' && typeof value === 'number') {\n            return true;\n        }\n\n        if (property === 'letterSpacing') {\n            return true;\n        }\n\n        if (property === 'flex' && typeof value !== 'number') {\n            return true;\n        }\n\n        return false;\n    },\n\n    guardedKeyHandler(property, value) {\n        let tempObject = {},\n            translatedValue = 0;\n\n        if (property === 'zIndex' && typeof value !== 'number') {\n            tempObject[property] = 0;\n        }\n\n        if (property === 'fontWeight') {\n            tempObject[property] = `${value}`;\n        }\n\n        if (property === 'letterSpacing') {\n            if (value.search('em') !== -1) {\n                translatedValue = parseFloat(value.slice(0, -2)) * 16;\n            }\n\n            tempObject[property] = translatedValue;\n        }\n\n        if (property === 'flex' && typeof value !== 'number') {\n            const firstNumber = value.match(/^[0-9]+/);\n\n            translatedValue = this.translateValues(\n                firstNumber && firstNumber.length ? firstNumber[0] : 0\n            );\n\n            tempObject[property] = translatedValue;\n        }\n\n        return tempObject;\n    },\n\n    translateKeys(name, prefix = '') {\n        let translatedKey = name;\n\n        if (translatedKey.search('default') !== -1) {\n            translatedKey = `${prefix}${translatedKey.replace('-default', '')}`;\n        }\n\n        if (translatedKey.search(/\\//) !== -1) {\n            translatedKey = `${prefix}${translatedKey.replace('/', '_')}`;\n        }\n\n        if (translatedKey.search(/^-[a-zA-Z]/) !== -1) {\n            translatedKey = `${prefix}${translatedKey.replace(\n                /^(-)[a-zA-Z]/g,\n                result => {\n                    return result.replace('-', '_');\n                }\n            )}`;\n        }\n\n        if (translatedKey.search('-') !== -1) {\n            translatedKey = translatedKey.replace(/-([a-z])/g, result => {\n                return result[1].toUpperCase();\n            });\n        }\n\n        if (translatedKey.search(/^[a-zA-Z_]+-[0-9]/) !== -1) {\n            translatedKey = `${prefix}${translatedKey.replace('-', '')}`;\n        }\n\n        return translatedKey;\n    },\n\n    translateValues(content) {\n        let translatedValue = content;\n\n        if (translatedValue === 'transparent') {\n            return 'rgba(0,0,0,0)';\n        }\n\n        if (translatedValue === 'true') {\n            return true;\n        }\n\n        if (translatedValue === 'false') {\n            return false;\n        }\n\n        if (typeof translatedValue !== 'string') {\n            return translatedValue;\n        }\n\n        if (content.search(/^-?[0-9]*(\\.[0-9]+)?px$/) !== -1) {\n            translatedValue = content.replace('px', '');\n\n            return parseInt(translatedValue);\n        }\n\n        if (content.search(/^-?[0-9]*(\\.[0-9]+)?rem$/) !== -1) {\n            translatedValue = content.replace('rem', '');\n\n            translatedValue = parseFloat(translatedValue) * 16;\n\n            return Math.round(translatedValue);\n        }\n\n        if (content.search(/^-?[0-9]*(\\.[0-9]+)?em$/) !== -1) {\n            translatedValue = content.replace('em', '');\n\n            translatedValue = parseFloat(translatedValue) * 16;\n\n            return Math.round(translatedValue);\n        }\n\n        if (content.search(/^-?[0-9]+$/) !== -1) {\n            return parseInt(translatedValue);\n        }\n\n        if (content.search(/-?\\.[0-9]+$/) !== -1) {\n            return parseFloat(translatedValue);\n        }\n\n        return translatedValue;\n    },\n\n    getShadowValues(content) {\n        let results, color, elevation;\n\n        if (content === 'none' || content.search(/inset/) !== -1) {\n            return {\n                color: 'rgba(0, 0, 0, 0)',\n                offset: {width: 0, height: 0},\n                radius: 0,\n                opacity: 0,\n                elevation: 0,\n            };\n        }\n\n        results = content.match(\n            /^([0-9]+)p?x?\\s([0-9]+)p?x?\\s([0-9]+)p?x?\\s(-?[0-9]+)?p?x?\\s?(rgba?\\(.+?\\))?(#[a-zA-Z0-9]{3,8})?/\n        );\n\n        elevation = content.match(/,(?:\\s+)?(-?[0-9]+)$/);\n\n        color = results[5];\n\n        elevation = elevation\n            ? this.translateValues(elevation[1])\n            : this.translateValues(results[3]) / 2;\n\n        if (typeof color === 'undefined') {\n            color = results[6];\n        }\n\n        return {\n            color: color,\n            offset: {\n                width: this.translateValues(results[1]),\n                height: this.translateValues(results[2]),\n            },\n            radius: this.translateValues(results[3]),\n            opacity: 1,\n            elevation: elevation,\n        };\n    },\n\n    parseThemeValues(values) {\n        if (typeof values === 'object' && !Array.isArray(values)) {\n            return this.toArray(values);\n        }\n\n        return values;\n    },\n\n    toArray(object) {\n        return Object.keys(object).map(value => {\n            return [value, object[value]];\n        });\n    },\n};\n"]},"metadata":{},"sourceType":"module"}